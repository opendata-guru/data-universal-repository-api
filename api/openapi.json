{
  "openapi": "3.0.3",
  "info": {
    "title": "Data Universal Repository API",
    "version": "2.0.0",
    "description": "API wrapper around different know data repositories",
    "contact": {
      "email": "thomas@tursics.de",
      "name": "Thomas Tursics",
      "url": "https://www.tursics.de/"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    }
  },
  "servers": [
    {
      "url": "https://opendata.guru/api/2",
      "variables": {},
      "description": ""
    }
  ],
  "paths": {
    "/p": {
      "get": {
        "summary": "Get a list of all portals",
        "description": "A list of all known portals is returned.",
        "operationId": "getPObjects",
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "allPortalsSample": {
                    "value": [
                      {
                        "pid": "p000",
                        "sid": "s78h2",
                        "url": "https://data.europa.eu",
                        "deeplink": "https://data.europa.eu/api/hub/search/"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      },
      "post": {
        "summary": "Add a known portal",
        "description": "Unfortunately, the list of portals cannot be changed here. Please create an issue on GitHub at https://github.com/opendata-guru/data-universal-repository-api/tree/main/api-data",
        "operationId": "postPObjects",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "tbd.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "edp": {
                "value": "https://data.europa.eu/api/hub/search/",
                "summary": "URL of European data portal"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/p/{pID}": {
      "get": {
        "summary": "Learn more about a portal",
        "description": "The information about the specified portal is returned. Alternatively, the value “random” can be specified to receive information about a random portal.",
        "operationId": "getPObject",
        "parameters": [
          {
            "$ref": "#/components/parameters/pidPathRandomParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "pSample": {
                    "value": {
                      "pid": "p000",
                      "sid": "s78h2",
                      "url": "https://data.europa.eu",
                      "deeplink": "https://data.europa.eu/api/hub/search/"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      },
      "post": {
        "summary": "Changing the data of a portal",
        "description": "Unfortunately, the portal data cannot be changed here. Please create an issue on GitHub at https://github.com/opendata-guru/data-universal-repository-api/tree/main/api-data.",
        "operationId": "postPObject",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pidPathParam"
          },
          {
            "$ref": "#/components/parameters/sidParam"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/p/{pID}/l": {
      "get": {
        "summary": "tbd.",
        "description": "+ Get a list of all linked ...",
        "parameters": [
          {
            "$ref": "#/components/parameters/pidPathRandomParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "pSample": {
                    "value": "tbd."
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/p/{pID}/system": {
      "get": {
        "summary": "tbd.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pidPathRandomParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "pSample": {
                    "value": "tbd."
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/p/{pID}/{date}": {
      "get": {
        "summary": "tbd.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pidPathRandomParam"
          },
          {
            "$ref": "#/components/parameters/datePathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "pSample": {
                    "value": "tbd."
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/s": {
      "get": {
        "summary": "Get a list of all suppliers",
        "description": "A list of all known suppliers is returned.",
        "operationId": "getSObjects",
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "allPortalsSample": {
                    "value": [
                      {
                        "sid": "sYyj9",
                        "title": {
                          "de": "Europa",
                          "en": "Europe"
                        },
                        "type": "root",
                        "sameAs": {
                          "wikidata": "http://www.wikidata.org/entity/Q458"
                        },
                        "partOf": {
                          "wikidata": ""
                        },
                        "geocoding": {
                          "germanRegionalKey": ""
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      },
      "post": {
        "summary": "Add a known supplier",
        "description": "Unfortunately, the list of suppliers cannot be changed here. Please create an issue on GitHub at https://github.com/opendata-guru/data-universal-repository-api/tree/main/api-data",
        "operationId": "postSObjects",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "tbd.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "municipality": {
                "value": "municipality",
                "summary": "Municipality"
              }
            }
          },
          {
            "name": "sameaswikidata",
            "in": "query",
            "description": "Same as Wikidata ... tbd.",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "berlin": {
                "value": "https://www.wikidata.org/entity/Q64",
                "summary": "Wikidata path to Berlin"
              },
              "berlin-qid": {
                "value": "Q64",
                "summary": "Only the qid of Berlin"
              }
            }
          },
          {
            "name": "partofwikidata",
            "in": "query",
            "description": "Part of Wikidata ... tbd.",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "empty": {
                "value": null,
                "summary": "Empty value"
              },
              "berlin": {
                "value": "https://www.wikidata.org/entity/Q64",
                "summary": "Wikidata path to Berlin"
              },
              "berlin-qid": {
                "value": "Q64",
                "summary": "Only the qid of Berlin"
              }
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/s/{sID}": {
      "get": {
        "summary": "Learn more about a supplier",
        "description": "The information about the specified supplier is returned. Alternatively, the value “random” can be specified to receive information about a random supplier.",
        "operationId": "getSObject",
        "parameters": [
          {
            "$ref": "#/components/parameters/sidPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "europeSample": {
                    "value": {
                      "sid": "sYyj9",
                      "title": {
                        "de": "Europa",
                        "en": "Europe"
                      },
                      "type": "root",
                      "sameAs": {
                        "wikidata": "http://www.wikidata.org/entity/Q458"
                      },
                      "partOf": {
                        "wikidata": ""
                      },
                      "geocoding": {
                        "germanRegionalKey": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "generally"
        ]
      }
    },
    "/datasets": {
      "get": {
        "summary": "Coming soon",
        "parameters": [
          {
            "$ref": "#/components/parameters/linkParam"
          },
          {
            "name": "sub_id",
            "in": "query",
            "description": "description to be done",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/datasets/count": {
      "get": {
        "summary": "Counts the number of datasets",
        "description": "Get the number of datasets in the system.",
        "operationId": "getDatasetsCount",
        "parameters": [
          {
            "$ref": "#/components/parameters/linkParamOptional"
          },
          {
            "$ref": "#/components/parameters/pidParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "ckanSample": {
                    "value": {
                      "number": 42
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/datasets/find": {
      "get": {
        "summary": "Find all records of an identifier",
        "description": "Find all records of a specified identifier.",
        "operationId": "getDatasetsFind",
        "parameters": [
          {
            "$ref": "#/components/parameters/linkParamOptional"
          },
          {
            "$ref": "#/components/parameters/pidParam"
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "Unique identifier that identifies a data set",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "ckanSample": {
                    "value": [
                      {
                        "id": "3cf4e37c-3ae6-4c0c-a1e2-ff782ce47a03",
                        "name": "inspire-sh-gebaude-2d-alkis4cca8",
                        "title": "INSPIRE SH Gebäude – 2D ALKIS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/suppliers": {
      "get": {
        "summary": "Get a list of all suppliers",
        "description": "Obtain a list of all suppliers of the system used. Additional data is provided for each supplier, such as the number of records delivered. If available, semantic IDs (Wikidata, official region keys) are added to the data.",
        "operationId": "getSuppliers",
        "parameters": [
          {
            "$ref": "#/components/parameters/linkParamOptional"
          },
          {
            "$ref": "#/components/parameters/pidParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "ckanSample": {
                    "value": [
                      {
                        "id": "StadtDortmund",
                        "name": "StadtDortmund",
                        "title": "Dortmund",
                        "created": "",
                        "packages": 489,
                        "sid": "s78h2",
                        "contributor": "",
                        "type": "municipality",
                        "wikidata": "Q1295",
                        "link": "",
                        "rs": "059130000000",
                        "associated_rs": "",
                        "lobject": {
                          "lid": "lgRi3",
                          "pid": "pANW",
                          "identifier": "StadtDortmund",
                          "title": "Dortmund",
                          "sid": "",
                          "lastseen": "2024-01-01"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/system": {
      "get": {
        "summary": "Get system status information",
        "description": "Get information about the system used, the version number, extensions and a link.",
        "operationId": "getSystem",
        "parameters": [
          {
            "$ref": "#/components/parameters/linkParamOptional"
          },
          {
            "$ref": "#/components/parameters/pidParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "ckanSample": {
                    "value": {
                      "cms": "",
                      "extensions": [
                        "text_view",
                        "image_view",
                        "recline_view"
                      ],
                      "system": "CKAN",
                      "url": "https://ckan.open.nrw.de",
                      "version": "2.9.9"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/system/changelog": {
      "get": {
        "summary": "Get the system software change history",
        "description": "The system software used has a change history. The complete history is returned with the version numbers, the update dates and an assessment of the updateability (in traffic light colors).",
        "parameters": [
          {
            "name": "system",
            "in": "query",
            "description": "System software name",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "arcgis": {
                "value": "ArcGIS",
                "summary": "ArcGIS portal"
              },
              "ckan": {
                "value": "CKAN",
                "summary": "CKAN portal"
              },
              "entrystore": {
                "value": "EntryStore",
                "summary": "EntryStore portal"
              },
              "ods": {
                "value": "Opendatasoft",
                "summary": "Opendatasoft portal"
              },
              "piveau": {
                "value": "Piveau",
                "summary": "Piveau portal"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "ckanSample": {
                    "value": {
                      "history": [
                        {
                          "color": "green",
                          "date": "2024-03-13",
                          "version": "2.10.4"
                        },
                        {
                          "color": "yellow",
                          "date": "2023-12-13",
                          "version": "2.10.3"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "live"
        ]
      }
    },
    "/data-providers": {
      "get": {
        "summary": "Deprecated",
        "description": "A list of all known data providers is returned. For each entry, a type, an official region key, and a Wikidata ID are returned where possible. The \"sid\" and \"link\" parameter can be used in other API endpoints.",
        "operationId": "getDataProviders",
        "responses": {
          "200": {
            "description": "Example of a successful answer",
            "content": {
              "application/json": {
                "examples": {
                  "govdataSample": {
                    "value": [
                      {
                        "sid": "s78h2",
                        "title": "Deutschland",
                        "contributor": "https://www.govdata.de/",
                        "type": "country",
                        "rs": "",
                        "associated_rs": "",
                        "wikidata": "Q183",
                        "link": "https://ckan.govdata.de/api/3/action/organization_list"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          }
        },
        "tags": [
          "maintained"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "datePathParam": {
        "name": "date",
        "in": "path",
        "description": "tbd. + 'today' + 'yesterday' + 'now'",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "today": {
            "value": "today",
            "summary": "Today"
          },
          "yesterday": {
            "value": "yesterday",
            "summary": "Yesterday"
          },
          "sampleDate": {
            "value": "2024-02-24T00:00:00.000Z",
            "summary": "sample tbd."
          },
          "now": {
            "value": "now",
            "summary": "now tbd."
          }
        }
      },
      "linkParam": {
        "name": "link",
        "in": "query",
        "description": "URL to the source system. The URL can also be a deep link to the data portal API. A smart algorithm helps correctly identify the endpoint.",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "arcgis": {
            "value": "https://portal-chemnitz.opendata.arcgis.com",
            "summary": "ArcGIS portal"
          },
          "ckan": {
            "value": "https://ckan.govdata.de",
            "summary": "CKAN portal"
          },
          "ckan-long": {
            "value": "https://open.nrw/api/3/action/organization_list",
            "summary": "CKAN portal with long URL"
          },
          "datenadler": {
            "value": "https://datenadler.de/",
            "summary": "Datenadler portal"
          },
          "dkan": {
            "value": "https://open-data.bielefeld.de/api/3/action/group_list",
            "summary": "DKAN portal"
          },
          "entrystore": {
            "value": "https://register.opendata.sachsen.de/store/",
            "summary": "EntryStore portal"
          },
          "gdide": {
            "value": "https://www.geoportal.de/",
            "summary": "GDI-DE portal"
          },
          "mcloud": {
            "value": "https://www.mcloud.de/web/guest/suche/",
            "summary": "mCloud portal"
          },
          "mobilithek": {
            "value": "https://mobilithek.info/mobilithek/api/v1.0/export/datasets/mobilithek",
            "summary": "mobilithek portal"
          },
          "ods": {
            "value": "https://opendata.potsdam.de/api/explore/v2.1",
            "summary": "Opendatasoft portal"
          },
          "piveau": {
            "value": "https://opendata.bayern/api/hub/search/",
            "summary": "Piveau portal"
          },
          "czech": {
            "value": "https://data.gov.cz/api/v1/solr/info",
            "summary": "Portal from Czech Republic"
          },
          "spain": {
            "value": "https://datos.gob.es/en/catalogo",
            "summary": "Portal from Spain"
          }
        }
      },
      "linkParamOptional": {
        "allOf": [
          {
            "$ref": "#/components/parameters/linkParam"
          },
          {
            "required": false
          }
        ]
      },
      "pidParam": {
        "name": "pID",
        "in": "query",
        "description": "The providers pID. You must provide either a link or an existing pID.",
        "required": false,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "empty": {
            "value": "",
            "summary": "Empty value"
          },
          "root": {
            "value": "p000",
            "summary": "European data"
          }
        }
      },
      "pidPathParam": {
        "name": "pID",
        "in": "path",
        "description": "The unique pID of the provider must be specified.",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "root": {
            "value": "p000",
            "summary": "European data"
          }
        }
      },
      "pidPathRandomParam": {
        "name": "pID",
        "in": "path",
        "description": "The unique pID of the provider must be specified. Alternatively, the value 'random' can be specified to obtain a random provider.",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "random": {
            "value": "random",
            "summary": "Random pID"
          },
          "root": {
            "value": "p000",
            "summary": "European data"
          }
        }
      },
      "sidParam": {
        "name": "sID",
        "in": "query",
        "description": "The supplier sID. You must provide an existing sID.",
        "required": false,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "empty": {
            "value": "",
            "summary": "Empty value"
          },
          "root": {
            "value": "sYyj9",
            "summary": "Europa"
          }
        }
      },
      "sidPathParam": {
        "name": "sID",
        "in": "path",
        "description": "The unique sID of the supplier must be specified. Alternatively, the value 'random' can be specified to get a random supplier.",
        "required": true,
        "allowEmptyValue": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "empty": {
            "value": "random",
            "summary": "Random sID"
          },
          "root": {
            "value": "sYyj9",
            "summary": "Europa"
          }
        }
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "examples": {
              "badRequest": {
                "value": {
                  "error": 400,
                  "message": "Bad Request. The underlying system could not be detected"
                }
              }
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "examples": {
              "unauthorized": {
                "value": {
                  "error": 401,
                  "message": "Unauthorized. Please create an issue on GitHub for your change request",
                  "createIssue": "https://github.com/opendata-guru/data-universal-repository-api/issues/new",
                  "repository": "https://github.com/opendata-guru/data-universal-repository-api/tree/main/api-data"
                }
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "examples": {
              "notFound": {
                "value": {
                  "error": 404,
                  "message": "Not Found"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "generally",
      "description": "General functions of the API can query both historical data from the database and live data from the source systems."
    },
    {
      "name": "live",
      "description": "The API endpoints call the source systems directly. Be careful during heavy use, there is no caching mechanism."
    },
    {
      "name": "maintained",
      "description": "This information provided here is maintained manually and can be accessed via the API."
    }
  ]
}
openapi: 3.0.3
info:
  title: Data Universal Repository API
  version: 2.0.0
  description: API wrapper around different know data repositories
  contact:
    email: thomas@tursics.de
    name: Thomas Tursics
    url: https://www.tursics.de/
  license:
    name: MIT
    url: https://opensource.org/license/mit/
servers:
  - url: https://opendata.guru/api/2
    variables: {}
    description: ''
paths:
  /datasets:
    get:
      summary: Coming soon
      responses:
        '404':
          description: Not found error
          content:
            application/json:
              examples:
                notFound:
                  value:
                    error: 404
                    message: Not Found
      tags:
        - live
  /datasets/count:
    get:
      summary: Counts the number of datasets
      description: Get the number of datasets in the system.
      operationId: getDatasetsCount
      parameters:
        - name: link
          in: query
          description: URL to the source system. The URL can also be a deep link to the data portal API. A smart algorithm helps correctly identify the endpoint.
          required: true
          allowEmptyValue: false
          schema:
            type: string
          examples:
            arcgis:
              value: https://portal-chemnitz.opendata.arcgis.com
              summary: ArcGIS portal
            ckan:
              value: https://ckan.govdata.de
              summary: CKAN portal
            ckan-long:
              value: https://open.nrw/api/3/action/organization_list
              summary: CKAN portal with long URL
            datenadler:
              value: https://datenadler.de/
              summary: Datenadler portal
            entrystore:
              value: https://register.opendata.sachsen.de/store/
              summary: EntryStore portal
            gdide:
              value: https://www.geoportal.de/
              summary: GDI-DE portal
            mcloud:
              value: https://www.mcloud.de/web/guest/suche/
              summary: mCloud portal
            ods:
              value: https://opendata.potsdam.de/api/explore/v2.1
              summary: Opendatasoft portal
            piveau:
              value: https://opendata.bayern/api/hub/search/
              summary: Piveau portal
      responses:
        '200':
          description: Example of a successful answer
          content:
            application/json:
              examples:
                ckanSample:
                  value:
                    number: 42
        '400':
          description: Example of an error response
          content:
            application/json:
              examples:
                unsetLink:
                  value: 
                    error: 400
                    message: Bad Request. The underlying system could not be detected
      tags:
        - live
  /suppliers:
    get:
      summary: Coming soon
      responses:
        '404':
          description: Not found error
          content:
            application/json:
              examples:
                notFound:
                  value:
                    error: 404
                    message: Not Found
      tags:
        - live
  /system:
    get:
      summary: Get system status information
      description: Get information about the system used, the version number, extensions and a link.
      operationId: getSystem
      parameters:
        - name: link
          in: query
          description: URL to the source system. The URL can also be a deep link to the data portal API. A smart algorithm helps correctly identify the endpoint.
          required: true
          allowEmptyValue: false
          schema:
            type: string
          examples:
            arcgis:
              value: https://portal-chemnitz.opendata.arcgis.com
              summary: ArcGIS portal
            ckan:
              value: https://ckan.govdata.de
              summary: CKAN portal
            ckan-long:
              value: https://open.nrw/api/3/action/organization_list
              summary: CKAN portal with long URL
            datenadler:
              value: https://datenadler.de/
              summary: Datenadler portal
            entrystore:
              value: https://register.opendata.sachsen.de/store/
              summary: EntryStore portal
            gdide:
              value: https://www.geoportal.de/
              summary: GDI-DE portal
            mcloud:
              value: https://www.mcloud.de/web/guest/suche/
              summary: mCloud portal
            ods:
              value: https://opendata.potsdam.de/api/explore/v2.1
              summary: Opendatasoft portal
            piveau:
              value: https://opendata.bayern/api/hub/search/
              summary: Piveau portal
      responses:
        '200':
          description: Example of a successful answer
          content:
            application/json:
              examples:
                ckanSample:
                  value:
                    cms: ''
                    extensions:
                     - text_view
                     - image_view
                     - recline_view
                    system: CKAN
                    url: https://ckan.open.nrw.de
                    version: 2.9.9
                         
        '400':
          description: Example of an error response
          content:
            application/json:
              examples:
                unsetLink:
                  value:
                    error: 400
                    message: Bad Request. The underlying system could not be detected
      tags:
        - live
tags:
  - name: live
    description: >-
      The API endpoints call the source systems directly. Be careful during heavy use, there is no caching mechanism.
